# This file exists within 'human-friendly_pedantic-timedelta' aka 'pedantic_timedelta':
#
#   https://github.com/hotoffthehamster/human-friendly_pedantic-timedelta
#
# Copyright Â© 2018-2020 Landon Bouma
# All rights reserved.
#
# This program is free software:  you can redistribute it and/or modify
# it  under  the  terms  of  the  GNU Affero General Public License  as
# published by the  Free Software Foundation, either  version 3  of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY;  without even the implied warranty of
# MERCHANTABILITY or  FITNESS FOR A PARTICULAR PURPOSE.  See  the
# GNU   Affero   General   Public   License   for   more  details.
#
# If you lost the GNU Affero General Public License that ships with
# this code (the 'LICENSE' file), see <http://www.gnu.org/licenses/>.

[coverage:run]
branch = True
source = pedantic_timedelta

[doc8]
ignore-path=*.egg-info/,.tox/,docs/_build/
max-line-length=89
# Specify encoding lest doc8 think it's 'Windows-1254' and raise UnicodeDecodeError.
file-encoding=utf-8
# DEVs: Uncomment verbose for TMI.
#  verbose=1

[flake8]
exclude = build/*.py,docs/*.py
max-line-length = 89
# See list of error codes:
#  https://pycodestyle.readthedocs.io/en/latest/intro.html#error-codes
# Some of these are necessary, and some are just preferences.
# - E711 comparison to None should be 'if cond is None:'
#   (lb): SQLAlchemy filter function honors `== None`, not `is None`, e.g.,
#           query = query.filter(AlchemyFact.activity == None)
# - W391: blank line at end of file
#   (lb): Personal preference. So that, e.g., Ctrl-End is predictable and
#   goes to first column of last line, which is empty; as opposed to going
#   to some unknown last column of a nonempty last line.
# - W503 line break before binary operator
#   (lb): I'm with Knuth, for readability. Prefer this:
#       if (some_thing
#           and another):
#           and another_thing):
#     over this:
#       if (some_thing and
#           another and
#           another_thing):
ignore = W391,W503

[metadata]
license_file = LICENSE

[wheel]
universal = 1

