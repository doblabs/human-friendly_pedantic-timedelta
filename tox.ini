# This file exists within 'human-friendly_pedantic-timedelta' aka 'pedantic_timedelta':
#
#   https://github.com/hotoffthehamster/human-friendly_pedantic-timedelta

# Tox configuration, used when you run `tox` locally,
# or when Travis CI runs. See:
#
#   https://travis-ci.org/hotoffthehamster/human-friendly_pedantic-timedelta/

[tox]
# Leave `codecov` out of this list (only run from Travis CI, per .travis.yml).
# Leave `isort` out of this list (it has unrelated issues and will always fail).
envlist = py{34,35,36,37}, dist_check, docs, flake8, pep257

[testenv]
# The [testenv] section provides defaults to the other [testenv:TEST] sections.

# Below, we'll set basepython for each of the make-test tasks. Here, we
# specify the latest Python as the default for other tasks (flake8, etc.).
basepython = python3.7

# Run tests by default. The [testenv:py*] tasks will default to these commands.
# Other tasks (flake8, etc.) will override these values with their own commands.
commands_pre = pip install -U -r requirements/test.pip
whitelist_externals = make
commands = make test

# ***

# 2019-02-18: Python 2.7 and 3.4 are EOL'ed 2020 and 2019, respectively.
# (lb): The PyLife is getting so simple!

[testenv:py34]
basepython = python3.4

[testenv:py35]
basepython = python3.5

[testenv:py36]
basepython = python3.6

[testenv:py37]
basepython = python3.7

# ***

[testenv:codecov]
deps = codecov
# Use passenv, lest:
#   Error: Missing repository upload token
passenv = CODECOV_*
commands =
    # Run tests and generate coverage.
    py.test --cov=./pedantic_timedelta tests/
    # Upload coverage results to codecov.io.
    codecov

[testenv:dist_check]
# (lb): TEACH: An alternative to commands_pre, e.g.,
#   commands_pre = pip install -U -r requirements/release.pip
# is to use deps' -r option, thusly:
deps = -rrequirements/release.pip
commands_pre =
commands =
    # Check distribution package (e.g., verify README will render in PyPI)
    # [Ã  la deprecated readme_renderer and `python setup.py check -m -r -s`].
    python setup.py sdist
    python setup.py bdist_wheel
    twine check dist/*

[testenv:docs]
commands_pre = pip install -U -r requirements/docs.pip
deps =
    doc8
    # Avoid doc8 error: `D000 Cannot analyze code. Pygments package not found.`
    pygments
commands =
    # Build to a temporary directory, e.g., instead of calling simply
    #     make docs
    # make it unnecessarily more complex,
    # (lb) because I saw this code in another project and thought it looked cool.
    # The make-docs here is called as, e.g.,
    #     make docs \
    #       BUILDDIR=/your/path/human-friendly_pedantic-timedelta/.tox/docs/tmp \
    #       SPHINXOPTS=
    make docs \
        BUILDDIR={envtmpdir} \
        SPHINXOPTS={env:SPHINXOPTS_BUILD:''}
    # The make-linkcheck is called as, e.g.,
    #     make --directory=docs linkcheck \
    #       BUILDDIR=/your/path/human-friendly_pedantic-timedelta/.tox/docs/tmp \
    #       SPHINXOPTS=
    make --directory=docs linkcheck \
        BUILDDIR={envtmpdir} \
        SPHINXOPTS={env:SPHINXOPTS_LINKCHECK:}
    # "Doc8 is an opinionated style checker for rst...."
    doc8

[testenv:flake8]
commands_pre =
deps = flake8
commands = flake8 setup.py pedantic_timedelta/ tests/

[testenv:isort]
commands_pre =
deps = isort
commands = isort --check-only --recursive --verbose setup.py pedantic_timedelta/ tests/

[testenv:manifest]
commands_pre =
deps = check-manifest
commands =
    # Ignore docs/docs/assets, which is symlinked to docs/assets in repo,
    #   but in dist/ archive, symlinks are resolved to duplicate copies.
    # And ignore modules.rst and pedantic_timedelta.rst, which are generated.
    # And ignore other DX files that are not packaged.
    check-manifest \
        -v \
        --ignore \
            codecov.yml,.coveragerc,.editorconfig,.ignore,.readthedocs.yml,tox.ini,docs/docs*,docs/modules.rst,docs/pedantic_timedelta.rst,docs/_config.yml

[testenv:pep257]
commands_pre =
deps = pep257
# PEP 257 -- Docstring Conventions
#   https://www.python.org/dev/peps/pep-0257/
commands = pep257 setup.py pedantic_timedelta/ tests/

